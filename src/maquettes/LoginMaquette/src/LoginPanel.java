
import java.io.IOException;
import java.net.SocketException;

/*
 * The MIT License
 *
 * Copyright 2019 Matan Davidi.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
/**
 * La classe LoginPanel Ã¨ il contenitore dei controlli che permettono di
 * richiamare i metodi che eseguono la registrazione di un utente sul server.
 *
 * @author Matan Davidi
 * @version 2019.04.10
 */
public class LoginPanel extends javax.swing.JPanel implements ChatListener {

    /**
     * Il client tramite il quale inviare pacchetti UDP per registrarsi al
     * server.
     */
    private LoginClient client;
    
    /**
     * Il server presso il quale registrarsi.
     */
    private LoginServer server;

    /**
     * Creates new form LoginPanel
     */
    public LoginPanel() {
        initComponents();
        client = new LoginClient();
        startServer();
    }

    /**
     * Istanzia e fa partire il server.
     */
    private void startServer() {

        try {

            server = new LoginServer();
            server.addChatListener(this);
            server.start();

        } catch (SocketException sex) {

            System.out.println(sex.getMessage());

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textPanel = new javax.swing.JPanel();
        usernameLabel = new javax.swing.JLabel();
        ipLabel = new javax.swing.JLabel();
        portLabel = new javax.swing.JLabel();
        usernameTextField = new javax.swing.JTextField();
        ipTextField = new javax.swing.JTextField();
        portTextField = new javax.swing.JTextField();
        loginButton = new javax.swing.JButton();

        setLayout(new java.awt.GridLayout(2, 1));

        textPanel.setLayout(new java.awt.GridLayout(2, 3));

        usernameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        usernameLabel.setText("Username:");
        textPanel.add(usernameLabel);

        ipLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ipLabel.setText("IP address:");
        textPanel.add(ipLabel);

        portLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        portLabel.setText("Port:");
        textPanel.add(portLabel);

        usernameTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        usernameTextField.setText("xXBeStScRiBbLeRXx");
        textPanel.add(usernameTextField);

        ipTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ipTextField.setText("127.0.0.1");
        textPanel.add(ipTextField);

        portTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        portTextField.setText("8080");
        textPanel.add(portTextField);

        add(textPanel);

        loginButton.setText("Login");
        loginButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loginButtonMouseClicked(evt);
            }
        });
        add(loginButton);
    }// </editor-fold>//GEN-END:initComponents

    private void loginButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginButtonMouseClicked

        try {

            client.sendLogin(usernameTextField.getText(), ipTextField.getText(), portTextField.getText());

        } catch (IOException ioe) {

            System.out.println(ioe.getMessage());

        }

    }//GEN-LAST:event_loginButtonMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ipLabel;
    private javax.swing.JTextField ipTextField;
    private javax.swing.JButton loginButton;
    private javax.swing.JLabel portLabel;
    private javax.swing.JTextField portTextField;
    private javax.swing.JPanel textPanel;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JTextField usernameTextField;
    // End of variables declaration//GEN-END:variables

    @Override
    public void appendToChat(String newLine) {

        System.out.println(newLine);

    }
}
